import json
from datetime import datetime, timedelta
import random
import boto3
import time

aws_access_key = ""
aws_secret_key = ""
region = "us-east-1"
stream_name = "inventory_updates_stream"

session = boto3.Session(
    aws_access_key_id=aws_access_key,
    aws_secret_access_key=aws_secret_key,
    region_name=region
)

kinesis_client = session.client('kinesis')

def generate_mock_data():
    product_id = ["P500", "P501", "P502", "P503", "P504","P505","P506","P507","P508","P509","P5010","P5011","P5012","P809"]
    store_id = ["W100","W101","W102","W104","W105","W106","W107","W108","W109"]
    start_date = datetime(2023, 10, 1)
    end_date = datetime(2024, 2, 3)
    random_timestamp = start_date + timedelta(seconds=random.randint(0, int((end_date - start_date).total_seconds())))
    return {
        "product_id": random.choice(product_id),
        "timestamp": random_timestamp.strftime("%Y-%m-%d %H:%M:%S"),
        "quantity_change": random.randint(-4, 4),
        "store_id": random.choice(store_id)
    }

while True:
    data = generate_mock_data()
    json_data = json.dumps(data).encode('utf-8')

    try:
        kinesis_client.put_record(
            StreamName=stream_name,
            Data=json_data,
            PartitionKey="partition_key"
        )
        print(f"Sent data to Kinesis: {data}")
    except Exception as e:
        print(f"Error sending data to Kinesis: {e}")

    time.sleep(random.uniform(1, 5))
